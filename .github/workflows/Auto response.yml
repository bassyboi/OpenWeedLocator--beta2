name: Auto Comment on Issues

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # Use the latest compatible version

    - name: Auto comment on issue
      uses: actions/github-script@v6
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        script: |
          const { context, getOctokit } = require('@actions/github');

          const eventName = context.eventName;
          let issueTitle, issueBody, issue_number;

          if (eventName === 'issues') {
            issueTitle = context.payload.issue.title;
            issueBody = context.payload.issue.body;
            issue_number = context.payload.issue.number;
          } else if (eventName === 'issue_comment') {
            issueTitle = context.payload.issue.title;  // Assuming this might not be available directly and needs a proper path
            issueBody = context.payload.comment.body;
            issue_number = context.payload.issue.number;
          }

          const prompt = `Title: ${issueTitle}\nBody: ${issueBody}\n\nPlease provide a helpful comment:`;
          const data = JSON.stringify({
            prompt: prompt,
            max_tokens: 350,
            temperature: 0,
            top_p: 1,
            frequency_penalty: 0,
            presence_penalty: 0,
            model: "text-davinci-002"
          });

          const response = await fetch('https://api.openai.com/v1/completions', {
            method: 'POST',
            body: data,
            headers: {
              'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
              'Content-Type': 'application/json'
            }
          });

          const responseData = await response.json();

          if (responseData.choices && responseData.choices.length > 0) {
            const comment = responseData.choices[0].text.trim();
            const ghToken = process.env.GH_TOKEN;
            const octokit = getOctokit(ghToken);

            await octokit.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: comment
            });
          } else {
            console.log('No response generated from OpenAI.');
          }
