name: Python RaspberryPi with ChatGPT Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests on Raspberry Pi emulator
        run: |
          # Example of running tests on a Raspberry Pi emulator
          # You can use QEMU or a Docker container that emulates Raspberry Pi architecture
          # Replace this command with the appropriate emulator test command
          python -m unittest discover tests/ || echo "Tests failed, moving to ChatGPT analysis."

      - name: Save Test Output
        if: failure() # Run this step only if the previous step fails
        run: |
          # Save test output to a file for analysis
          mkdir -p logs
          python -m unittest discover tests/ > logs/test_output.log 2>&1 || true

      - name: Check for errors and interact with ChatGPT API
        if: failure() # Run this step only if the previous step fails
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Extract the error logs
          ERROR_LOG=$(tail -n 50 logs/test_output.log) # Adjust the number of lines as needed
          
          # Send errors to ChatGPT and get suggestions
          RESPONSE=$(curl -s -X POST https://api.openai.com/v1/chat/completions \
          -H "Authorization: Bearer $OPENAI_API_KEY" \
          -H "Content-Type: application/json" \
          -d '{
            "model": "gpt-4",
            "messages": [{"role": "user", "content": "The following error was found during testing:\n'"$ERROR_LOG"'\nPlease provide a fix for the error."}]
          }' | jq -r '.choices[0].message.content')
          
          # Display the suggestion from ChatGPT
          echo "$RESPONSE"

      - name: Apply suggested code changes
        if: failure() # Run this step only if ChatGPT provided a suggestion
        run: |
          # Automatically modify code based on ChatGPT suggestion if feasible
          echo "$RESPONSE" > suggested_fixes.txt
          # Example placeholder for manual or semi-automated code integration
          # Here you would implement automatic code changes if possible

      - name: Commit and Push Fixes
        if: failure() # Run this step if changes were applied
        env:
          GH_TOKEN: ${{ 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.GH_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Apply ChatGPT suggested fixes"
          git push https://x-access-token:${GH_TOKEN}@github.com/bassyboi/OpenWeedLocator--beta2.git HEAD:main

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Raspberry Pi
        run: |
          # Deploy the updated code to a remote Raspberry Pi
          # Use SSH or any deployment tool like Ansible
          echo "Deploying to Raspberry Pi..."
          ssh pi@<raspberry_pi_ip> 'bash -s' < deploy.sh
